<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE dictionary SYSTEM "file://localhost/System/Library/DTDs/sdef.dtd">
<dictionary title="ModuleLoader Terminology">
	<suite name="ModuleLoader Suite" code="Molo" description="loding script modules">
		<value-type hidden="yes" name="script" code="scpt"/>
		<record-type name="module specifier" code="MoSp" description="A specifier of a module will be loaded.">
			<property name="name" code="pnam" description="Module name" type="text"/>
			<property name="reloading" code="pRLo" description="Whether or not to load a module ignoring module chache." type="boolean"/>
			<property name="version" code="vers" description="Required version." type="text"/>
		</record-type>
		<record-type name="dependency info" code="DpIf" description="Module dependency information">
			<property name="name" code="pnam" description="A property name which a module is loaded." type="text"/>
			<property name="module specifier" code="MoSp" description="A module specifier" type="module specifier"/>
		</record-type>
		<record-type name="local loader options" code="OPll">
			<property name="collecting modules" code="cLMd" type="boolean"/>
			<property name="only local" code="oNLo" type="boolean"/>
		</record-type>
		<command name="find module" code="MolofdMo" description="Find module from module paths. If specified module can not be forund, the error number 1800 will raise.">
			<direct-parameter description="A module name" type="text"/>
			<parameter name="additional paths" code="inDr" description="Additional locations to search modules." optional="yes">
				<type type="file" list="yes"/>
			</parameter>
			<parameter name="other paths" code="ohPh" description="If tue is passed,  module search paths are restricted to  paths given in &apos;additional paths&apos;." type="boolean" optional="yes"/>
			<parameter name="version" code="vers" description="Required version." type="text" optional="yes"/>
			<result description="A reference to a module." type="file"/>
		</command>
		<command name="load module" code="MololoMo" description="Load a module from module paths. If specified module can not be forund, the error number 1800 will raise.">
			<direct-parameter description="A module name." type="text"/>
			<parameter name="additional paths" code="inDr" description="Additional locations to search modules." optional="yes">
				<type type="file" list="yes"/>
			</parameter>
			<parameter name="other paths" code="ohPh" description="If tue is passed,  module search paths are restricted to  paths given in &apos;additional paths&apos;." type="boolean" optional="yes"/>
			<parameter name="version" code="vers" description="Required version." type="text" optional="yes"/>
			<result description="A loaded module." type="script"/>
		</command>
		<command name="_load module_" code="MoloPloM" description="A command for private use.">
			<direct-parameter description="A module name." type="text"/>
			<parameter name="additional paths" code="inDr" description="Additional locations to search modules." optional="yes">
				<type type="file" list="yes"/>
			</parameter>
			<parameter name="other paths" code="ohPh" description="If tue is passed,  module search paths are restricted to  paths given in &apos;additional paths&apos;." type="boolean" optional="yes"/>
			<parameter name="version" code="vers" description="Required version." type="text" optional="yes"/>
			<result description="A loaded module." type="record"/>
		</command>
		<command name="module loader" code="MoloMKlo" description="Obtain a loader object which is a script object to manage loaded modules.">
			<result description="A loader object" type="script"/>
		</command>
		<command name="_module loader_" code="MoloPMKl" description="A command for private use.">
			<result description="A loader object" type="script"/>
		</command>
		<command name="make local loader" code="MoloMkLl" description="Obtain a local loader object. The local loader search modules not only module paths but also &quot;path to me&quot; location.">
			<result description="A loader object" type="script"/>
		</command>
		<command name="module paths" code="MologtPH" description="List module paths. The default paths are ~/Library/Scritps/Modules and /Library/Scripts/Modules. Only existing folders are listed. Additional paths given by &quot;set additional paths to&quot; will be included in the result.">
			<result description="List of POSIX paths of folders.">
				<type type="file" list="yes"/>
			</result>
		</command>
		<command name="set additional module paths to" code="MoloadMp" description="Prepend module search paths.">
			<direct-parameter description="Folders including script modules" type="file"/>
			<result description="If success return true" type="boolean"/>
		</command>
		<command name="ModuleLoader version" code="MoloVers" description="get version number of ModuleLoader">
			<result description="version number" type="text"/>
		</command>
		<command name="module" code="MoloMkMs" description="Make a module specifier record. Must be placed in a user defined propery statement or in an argument of load handler of a loader object. If a module name is ommited, property name is used as a module name.">
			<direct-parameter description="A module name." type="text" optional="yes"/>
			<parameter name="version" code="vers" description="Required version." type="text" optional="yes"/>
			<parameter name="reloading" code="pRLo" description="Whether or not to load a module ignoring module chache." type="boolean" optional="yes"/>
			<result description="A module specifer record" type="module specifier"/>
		</command>
		<command name="extract dependencies from" code="MoloExdp" description="Extarct module specifier records from a module script.">
			<direct-parameter description="A module script" type="script"/>
			<result>
				<type type="dependency infomation" list="yes"/>
			</result>
		</command>
		<command name="boot" code="MoloBoot" description="Set up modules depending on. This command must be sent to a loader object. returned from &quot;module loader&quot; command.">
			<direct-parameter description="A loader script generated by make loader command." type="script"/>
			<parameter name="for" code="forM" description="A top-level script which need to load modules" type="script"/>
			<result type="script"/>
		</command>
		<event name="module loaded" code="MolowlLd" description="Called when a module is loaded by a loader object. It&apos;s a place to customize modules.">
			<direct-parameter type="script"/>
			<parameter name="by" code="whLD" description="A loader object" type="script" optional="yes"/>
		</event>
	</suite>
</dictionary>